{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ryankirk/Documents/Sites/DemoReactApp/demo-react-app/src/components/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport UserProfile from \"./UserProfile\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport fetchRepos from \"../helpers/dataFunctions\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [profileImage, setProfileImage] = useState(\"\");\n  const [profileHeader, setProfileHeader] = useState(\"\");\n  const [repositories, setRepositories] = useState([]);\n  const [showRepos, setShowRepos] = useState(false);\n\n  let fetchUser = () => {\n    var nameValue = document.getElementById(\"site-search\").value;\n    fetch(`https://api.github.com/users/${nameValue}`).then(function (response) {\n      // The API call was successful!\n      return response.json();\n    }).then(function (data) {\n      if (data.message && data.message === \"Not Found\") {\n        setProfileHeader(\"No user found!\");\n      } else {\n        // This is the JSON from our response\n        console.log(data);\n        setProfileHeader(data.login);\n        setProfileImage(data.avatar_url);\n      }\n\n      showRepos && setShowRepos(false);\n    }).catch(function (err) {\n      // There was an error\n      console.warn(\"Something went wrong.\", err);\n    }); //Fetch list of repos\n\n    let repos = fetchRepos(nameValue);\n    setRepositories(repos);\n  };\n\n  let toggleRepo = () => {\n    setShowRepos(!showRepos);\n  };\n\n  let repoArr = [];\n  repositories && repositories.length > 0 && repositories.forEach(element => {\n    repoArr.push(element.name);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBarCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"site-search\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          children: \"GitHub User Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"search\",\n        id: \"site-search\",\n        name: \"q\",\n        \"aria-label\": \"Search through site content\",\n        variant: \"outlined\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchUser,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), profileHeader && repositories && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          title: profileHeader,\n          picture: profileImage,\n          repositories: repositories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), profileHeader !== \"No user found!\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: toggleRepo,\n          children: !showRepos ? \"Show Repositories\" : \"Hide Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), showRepos && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBarCard right-content\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h6\",\n        children: \"Repositories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reposDisplay\",\n        children: repoArr && showRepos && (repoArr.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No Public Repos Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }, this) : repoArr.map((e, id) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"repos\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 45\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"LFbb867W+aFIpxT8IRn/7mTA8YI=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/ryankirk/Documents/Sites/DemoReactApp/demo-react-app/src/components/SearchBar.tsx"],"names":["React","useState","UserProfile","Button","TextField","Typography","fetchRepos","SearchBar","profileImage","setProfileImage","profileHeader","setProfileHeader","repositories","setRepositories","showRepos","setShowRepos","fetchUser","nameValue","document","getElementById","value","fetch","then","response","json","data","message","console","log","login","avatar_url","catch","err","warn","repos","toggleRepo","repoArr","length","forEach","element","push","name","map","e","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport UserProfile from \"./UserProfile\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IRepos from \"../types/custom\";\nimport fetchRepos from \"../helpers/dataFunctions\";\n\nconst SearchBar = () => {\n    const [profileImage, setProfileImage] = useState<string>(\"\");\n    const [profileHeader, setProfileHeader] = useState<string>(\"\");\n    const [repositories, setRepositories] = useState<IRepos[]>([]);\n    const [showRepos, setShowRepos] = useState<boolean>(false);\n\n    let fetchUser = () => {\n        var nameValue = (document.getElementById(\n            \"site-search\"\n        ) as HTMLInputElement).value;\n\n        fetch(`https://api.github.com/users/${nameValue}`)\n            .then(function (response) {\n                // The API call was successful!\n                return response.json();\n            })\n            .then(function (data) {\n                if (data.message && data.message === \"Not Found\") {\n                    setProfileHeader(\"No user found!\");\n                } else {\n                    // This is the JSON from our response\n                    console.log(data);\n                    setProfileHeader(data.login);\n                    setProfileImage(data.avatar_url);\n                }\n                showRepos && setShowRepos(false);\n            })\n            .catch(function (err) {\n                // There was an error\n                console.warn(\"Something went wrong.\", err);\n            });\n\n        //Fetch list of repos\n        let repos: Array = fetchRepos(nameValue);\n        setRepositories(repos);\n    };\n\n    let toggleRepo = () => {\n        setShowRepos(!showRepos);\n    };\n\n    let repoArr: string[] = [];\n\n    repositories &&\n        repositories.length > 0 &&\n        repositories.forEach((element) => {\n            repoArr.push(element.name);\n        });\n\n    return (\n        <div className=\"searchBar\">\n            <div className=\"searchBarCard\">\n                <label htmlFor=\"site-search\">\n                    <Typography variant=\"h6\" align=\"center\">\n                        GitHub User Search\n                    </Typography>\n                </label>\n                <TextField\n                    type=\"search\"\n                    id=\"site-search\"\n                    name=\"q\"\n                    aria-label=\"Search through site content\"\n                    variant=\"outlined\"\n                    placeholder=\"Username\"\n                ></TextField>\n\n                <Button onClick={fetchUser}>Search</Button>\n                {profileHeader && repositories && (\n                    <>\n                        <UserProfile\n                            title={profileHeader}\n                            picture={profileImage}\n                            repositories={repositories}\n                        />\n\n                        {profileHeader !== \"No user found!\" && (\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                onClick={toggleRepo}\n                            >\n                                {!showRepos\n                                    ? \"Show Repositories\"\n                                    : \"Hide Repositories\"}\n                            </Button>\n                        )}\n                    </>\n                )}\n            </div>\n\n            {showRepos && (\n                <div className=\"searchBarCard right-content\">\n                    <Typography align=\"center\" variant=\"h6\">\n                        Repositories\n                    </Typography>\n                    <div className=\"reposDisplay\">\n                        {repoArr &&\n                            showRepos &&\n                            (repoArr.length === 0 ? (\n                                <Typography>No Public Repos Found</Typography>\n                            ) : (\n                                repoArr.map((e, id) => {\n                                    return (\n                                        <span key={id} className=\"repos\">\n                                            <Typography align=\"center\">\n                                                {e}\n                                            </Typography>\n                                        </span>\n                                    );\n                                })\n                            ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}